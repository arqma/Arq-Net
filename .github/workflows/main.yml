name: Build Arq-Net Linux & Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  linux-build:
    runs-on: ${{ matrix.ubuntu }}
    strategy:
      matrix:
        ubuntu: [ubuntu-22.04, ubuntu-24.04]
    name: Linux build (${{ matrix.ubuntu }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: 'recursive'

      - name: Install dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libcap-dev curl libuv1-dev libsodium-dev libcurl4-openssl-dev pkg-config libsystemd-dev

      - name: Check LibUV version
        run: pkg-config --modversion libuv || true

      - name: Build (make)
        run: make

  static-linux-build:
    runs-on: ${{ matrix.ubuntu }}
    strategy:
      matrix:
        ubuntu: [ubuntu-22.04, ubuntu-24.04]
    name: Static Linux build (${{ matrix.ubuntu }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: 'recursive'

      - name: Install dependencies (Static Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libcap-dev curl libsodium-dev libcurl4-openssl-dev pkg-config

      - name: Build static LibUV
        run: |
          wget https://dist.libuv.org/dist/v1.44.2/libuv-v1.44.2.tar.gz
          tar xzf libuv-v1.44.2.tar.gz
          cd libuv-v1.44.2
          sh autogen.sh
          ./configure --prefix=$HOME/libuv-static --disable-shared --enable-static
          make -j$(nproc)
          make install

      - name: Debug LibUV files
        run: |
          find $HOME/libuv-static
          ls -l $HOME/libuv-static/lib
          cat $HOME/libuv-static/lib/pkgconfig/libuv.pc || true

      - name: Set PKG_CONFIG_PATH for static LibUV
        run: echo "PKG_CONFIG_PATH=$HOME/libuv-static/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Static Build (CMake, z lokalnym libuv)
        env:
          PKG_CONFIG_PATH: $HOME/libuv-static/lib/pkgconfig:$PKG_CONFIG_PATH
          LIBUV_ROOT: $HOME/libuv-static
        run: |
          cmake -S . -B build -DWITH_SYSTEMD=OFF -DSTATIC_LINK=ON -DLIBUV_ROOT=$HOME/libuv-static
          cmake --build build --target arqnet-static

  windows-build:
    runs-on: ${{ matrix.ubuntu }}
    strategy:
      matrix:
        ubuntu: [ubuntu-22.04, ubuntu-24.04]
    name: Windows cross-build (${{ matrix.ubuntu }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
          submodules: 'recursive'

      - name: Install dependencies (Windows cross-compile)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git pkg-config mingw-w64 nsis autoconf automake libtool

      - name: Build libsodium for MinGW
        run: |
          wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz
          tar xzf libsodium-1.0.18.tar.gz
          cd libsodium-1.0.18
          export CC=x86_64-w64-mingw32-gcc
          export CXX=x86_64-w64-mingw32-g++
          export AR=x86_64-w64-mingw32-ar
          export RANLIB=x86_64-w64-mingw32-ranlib
          export STRIP=x86_64-w64-mingw32-strip
          export LD=x86_64-w64-mingw32-ld
          ./configure --host=x86_64-w64-mingw32 --prefix=$HOME/mingw-libsodium --disable-shared --enable-static
          make -j$(nproc)
          make install

      - name: Build libcurl for MinGW (bez SSL)
        run: |
          wget https://curl.se/download/curl-7.82.0.tar.gz
          tar xzf curl-7.82.0.tar.gz
          cd curl-7.82.0
          export CC=x86_64-w64-mingw32-gcc
          export CXX=x86_64-w64-mingw32-g++
          export AR=x86_64-w64-mingw32-ar
          export RANLIB=x86_64-w64-mingw32-ranlib
          export STRIP=x86_64-w64-mingw32-strip
          export LD=x86_64-w64-mingw32-ld
          PKG_CONFIG_PATH="$HOME/mingw-libsodium/lib/pkgconfig"
          ./buildconf
          ./configure --host=x86_64-w64-mingw32 --prefix=$HOME/mingw-libcurl --with-sodium=$HOME/mingw-libsodium --disable-shared --enable-static --without-ssl
          make -j$(nproc)
          make install

      - name: Build libuv for MinGW
        run: |
          wget https://dist.libuv.org/dist/v1.44.2/libuv-v1.44.2.tar.gz
          tar xzf libuv-v1.44.2.tar.gz
          cd libuv-v1.44.2
          export CC=x86_64-w64-mingw32-gcc
          export CXX=x86_64-w64-mingw32-g++
          ./autogen.sh
          ./configure --host=x86_64-w64-mingw32 --prefix=$HOME/mingw-libuv --disable-shared --enable-static
          make -j$(nproc)
          make install

      - name: Check MinGW libs
        run: |
          find $HOME/mingw-libsodium
          find $HOME/mingw-libcurl
          find $HOME/mingw-libuv

      - name: Build for Windows (make windows-release)
        env:
          PKG_CONFIG_PATH: $HOME/mingw-libsodium/lib/pkgconfig:$HOME/mingw-libcurl/lib/pkgconfig:$HOME/mingw-libuv/lib/pkgconfig
          PKG_CONFIG: x86_64-w64-mingw32-pkg-config
          LIBSODIUM_ROOT: $HOME/mingw-libsodium
          LIBCURL_ROOT: $HOME/mingw-libcurl
          LIBUV_ROOT: $HOME/mingw-libuv
        run: |
          which x86_64-w64-mingw32-pkg-config || true
          x86_64-w64-mingw32-pkg-config --modversion libsodium || true
          x86_64-w64-mingw32-pkg-config --modversion libcurl || true
          x86_64-w64-mingw32-pkg-config --modversion libuv || true
          make windows-release
